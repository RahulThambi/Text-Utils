{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deepa\\\\OneDrive\\\\Desktop\\\\react-harry\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    //This is an arrow function\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleLoClick = () => {\n    //This is an arrow function\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const speak = () => {\n    let msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n  };\n  const handleClearClick = () => {\n    //This is an arrow function\n    let newText = '';\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    //This is an arrow function\n    setText(event.target.value); //update text to whatever currently is in the text box\n  };\n\n  //below the default value of text is set to null\n  const [text, setText] = useState(''); //creating a state, we use this since react doesn't allows us to update a variables value easilt as text=\"new text\";\n  // text=\"new value of state\" //wrong way to change state\n  //setText(\"new Text\");      //correct way to change state\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'light' ? 'white' : '#212529'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'light' ? 'white' : '#212529'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleUpClick,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleLoClick,\n        children: \"Convert to LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleClearClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: speak,\n        className: \"btn btn-warning mx-2 my-2\",\n        children: \"Speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" Minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","newText","text","toUpperCase","setText","handleLoClick","toLowerCase","speak","msg","SpeechSynthesisUtterance","window","speechSynthesis","handleClearClick","handleOnChange","event","target","value","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","backgroundColor","id","rows","onClick","type","split","length","_c","$RefreshReg$"],"sources":["C:/Users/deepa/OneDrive/Desktop/react-harry/textutils/src/components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick = () =>{     //This is an arrow function\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  }\r\n\r\n  const handleLoClick = () =>{     //This is an arrow function\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  }\r\n\r\n  const speak = () => {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n  }\r\n\r\n  const handleClearClick = () =>{     //This is an arrow function\r\n    let newText = '';\r\n    setText(newText);\r\n  }\r\n\r\n  const handleOnChange = (event) =>{    //This is an arrow function\r\n    setText(event.target.value);  //update text to whatever currently is in the text box\r\n  }\r\n\r\n  //below the default value of text is set to null\r\n  const [text, setText] = useState('');  //creating a state, we use this since react doesn't allows us to update a variables value easilt as text=\"new text\";\r\n  // text=\"new value of state\" //wrong way to change state\r\n  //setText(\"new Text\");      //correct way to change state\r\n  \r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='light'?'white':'#212529'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className='mb-3'>\r\n        <textarea className='form-control' value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'#212529'}}id='myBox' rows=\"8\"></textarea>  {/*this onChange function is a must or else we wont be able to type in the textbox*/}\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n      <button type=\"submit\" onClick={speak} className=\"btn btn-warning mx-2 my-2\">Speak</button>\r\n    </div>\r\n    <div className=\"container my-2\">\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}